---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: test
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: khinkali/grafana:0.0.1
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config-data
          mountPath: /var/lib/grafana
      initContainers:
        - name: git-init
          image: alpine/git
          command: ["/bin/sh", "-c", "git -C '/var/lib/grafana' clone https://${GIT_USERNAME}:${GIT_PASSWORD}@bitbucket.org/khinkali/grafana_backup && mv /var/lib/grafana/grafana_backup/* /var/lib/grafana/ && mv /var/lib/grafana/grafana_backup/.git /var/lib/grafana/ && rm -rf /var/lib/grafana/grafana_backup && chown -R 472:472 /var/lib/grafana/"]
          volumeMounts:
          - name: config-data
            mountPath: /var/lib/grafana
          env:
          - name: GIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: bitbucket
                key: username
          - name: GIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bitbucket
                key: password
      volumes:
      - name: config-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: test
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 31033
  type: NodePort
